/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Util.MiningCalculator;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.LookAndFeel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Can
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
       
            initComponents();
           
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        mhfeild = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        equipmentfeild = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        wattfeild = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        costfield = new javax.swing.JTextField();
        CalcButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTable = new javax.swing.JTable();
        currency = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mining Calculator");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("MH :");

        jLabel2.setText("Number of Equipment :");

        jLabel3.setText("Total Power Cons.(Watt) :");

        jLabel4.setText("Cost per KWh :");

        CalcButton.setText("Calculate");
        CalcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clearButton)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(equipmentfeild, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wattfeild, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mhfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(CalcButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mhfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(equipmentfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wattfeild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CalcButton)
                    .addComponent(clearButton))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Per Minute", null, null, null, null, null},
                {"Per Hour", null, null, null, null, null},
                {"Per Day", null, null, null, null, null},
                {"Per Week", null, null, null, null, null},
                {"Per Month", null, null, null, null, null},
                {"Per Year", null, null, null, null, null}
            },
            new String [] {
                "Time", "Mined ETH", "USD", "Cost of Power", "Profit", "Profit For Selected Money"
            }
        ));
        table.setRowHeight(42);
        jScrollPane2.setViewportView(table);

        infoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"MH", null},
                {"Number of Equipment", null},
                {"Total Network Hasrate", null},
                {"Block Reward", null},
                {"Block Time", null},
                {"Etherium Price", null}
            },
            new String [] {
                "Information", "Value"
            }
        ));
        infoTable.setAutoscrolls(false);
        infoTable.setRowHeight(31);
        jScrollPane1.setViewportView(infoTable);

        jLabel5.setText("USD/Selected :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currency, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(currency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcButtonActionPerformed
        String mh=mhfeild.getText();
        String equipment=equipmentfeild.getText();
        String watt=wattfeild.getText();
        String cost=costfield.getText();
        
        if (hasComma()) {
            JOptionPane.showMessageDialog(this, "Please use . (dot)");
            
        }else{
            
        MiningCalculator rig=new MiningCalculator(mh,equipment,watt,cost);
        
        setInfoTable(rig);
        setProfitTable(rig);
        }

    }//GEN-LAST:event_CalcButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_clearButtonActionPerformed

    public static void setInfoTable(MiningCalculator rig){
        DefaultTableModel infotable = (DefaultTableModel) infoTable.getModel();
         infotable.setValueAt(rig.getMh(), 0, 1);
         infotable.setValueAt(rig.getNumberofequipment(), 1, 1);
         infotable.setValueAt(rig.getTotalNetworkHasrate(), 2, 1);
         infotable.setValueAt(rig.getBlockReward(), 3, 1);
         infotable.setValueAt(rig.getBlockTime(), 4, 1);
         infotable.setValueAt(rig.getEthPrice(), 5, 1);
        
    }
     public static void setProfitTable(MiningCalculator rig){
          DefaultTableModel dataTable = (DefaultTableModel) table.getModel();
        dataTable.setValueAt(convertNumber(rig.getMinedEthPerMinute()), 0, 1);
        dataTable.setValueAt(convertNumber(rig.getMinedEthPerHour()), 1, 1);
        dataTable.setValueAt(convertNumber(rig.getMinedEthPerDay()), 2, 1);
        dataTable.setValueAt(convertNumber(rig.getMinedEthPerWeek()), 3, 1);
        dataTable.setValueAt(convertNumber(rig.getMinedEthPerMonth()), 4, 1);
        dataTable.setValueAt(convertNumber(rig.getMinedEthPerYear()), 5, 1);
        
        dataTable.setValueAt("$"+convertNumber(rig.getEarnedPerMinuteUSD()), 0, 2);
        dataTable.setValueAt("$"+convertNumber(rig.getEarnedPerHourUSD()), 1, 2);
        dataTable.setValueAt("$"+convertNumber(rig.getEarnedPerDayUSD()), 2, 2);
        dataTable.setValueAt("$"+convertNumber(rig.getEarnedPerWeekUSD()), 3, 2);
        dataTable.setValueAt("$"+convertNumber(rig.getEarnedPerMonthUSD()), 4, 2);
        dataTable.setValueAt("$"+convertNumber(rig.getEarnedPerYearUSD()), 5, 2);
        
        dataTable.setValueAt("$"+convertNumber(rig.getPowerConsumptionPerMinute()), 0, 3);
        dataTable.setValueAt("$"+convertNumber(rig.getPowerConsumptionPerHour()), 1, 3);
        dataTable.setValueAt("$"+convertNumber(rig.getPowerConsumptionPerDay()), 2, 3);
        dataTable.setValueAt("$"+convertNumber(rig.getPowerConsumptionPerWeek()), 3, 3);
        dataTable.setValueAt("$"+convertNumber(rig.getPowerConsumptionPerMonth()), 4, 3);
        dataTable.setValueAt("$"+convertNumber(rig.getPowerConsumptionPerYear()), 5, 3);
        
        dataTable.setValueAt("$"+convertNumber(rig.getProfitPerMinuteUSD()), 0, 4);
        dataTable.setValueAt("$"+convertNumber(rig.getProfitPerHourUSD()), 1, 4);
        dataTable.setValueAt("$"+convertNumber(rig.getProfitPerDayUSD()), 2, 4);
        dataTable.setValueAt("$"+convertNumber(rig.getProfitPerWeekUSD()), 3, 4);
        dataTable.setValueAt("$"+convertNumber(rig.getProfitPerMonthUSD()), 4, 4);
        dataTable.setValueAt("$"+convertNumber(rig.getProfitPerYearUSD()), 5, 4);
        
        if(!currency.getText().equals("")){ 
        dataTable.setValueAt(rig.getProfitPerMinuteUSD()*Double.parseDouble(currency.getText()), 0, 5);
        dataTable.setValueAt(rig.getProfitPerHourUSD()*Double.parseDouble(currency.getText()), 1, 5);
        dataTable.setValueAt(rig.getProfitPerDayUSD()*Double.parseDouble(currency.getText()), 2, 5);
        dataTable.setValueAt(rig.getProfitPerWeekUSD()*Double.parseDouble(currency.getText()), 3, 5);
        dataTable.setValueAt(rig.getProfitPerMonthUSD()*Double.parseDouble(currency.getText()), 4, 5);
        dataTable.setValueAt(rig.getProfitPerYearUSD()*Double.parseDouble(currency.getText()), 5, 5);
        }
         
         
         
         
         
         
     }
     public static void clearFields(){
        mhfeild.setText("");
        equipmentfeild.setText("");
        wattfeild.setText("");
        costfield.setText("");
        //currency.setText("");
         
     }
     public static boolean hasComma(){
         if(mhfeild.getText().contains(",")
                 ||equipmentfeild.getText().contains(",")
                 ||wattfeild.getText().contains(",")
                 ||costfield.getText().contains(",")
                 ||currency.getText().contains(",")){
             return true;
         }
          return false;
     }
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                    new Home().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalcButton;
    private javax.swing.JButton clearButton;
    private static javax.swing.JTextField costfield;
    private static javax.swing.JTextField currency;
    private static javax.swing.JTextField equipmentfeild;
    private static javax.swing.JTable infoTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTextField mhfeild;
    private static javax.swing.JTable table;
    private static javax.swing.JTextField wattfeild;
    // End of variables declaration//GEN-END:variables
 
    public static String convertNumber(double d){
       DecimalFormat formatter = new DecimalFormat("0.000000000");
        return formatter.format(d).toString();
    }
}
